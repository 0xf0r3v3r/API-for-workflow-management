"""create_tables

Revision ID: 19b37a6016d3
Revises: 
Create Date: 2024-05-23 13:31:22.802680

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "19b37a6016d3"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "nodeinterface",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("discriminator", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_nodeinterface_id"), "nodeinterface", ["id"], unique=False
    )
    op.create_table(
        "workflow",
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workflow_id"), "workflow", ["id"], unique=False)
    op.create_table(
        "conditionnode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "status_condition",
            sa.Enum("PENDING", "SENT", "OPENED", name="status"),
            nullable=False,
        ),
        sa.Column("yes_edge_count", sa.Boolean(), nullable=False),
        sa.Column("no_edge_count", sa.Boolean(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["nodeinterface.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_conditionnode_id"), "conditionnode", ["id"], unique=False
    )
    op.create_table(
        "edge",
        sa.Column("start_node_id", sa.Integer(), nullable=False),
        sa.Column("end_node_id", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.Column(
            "edge_type",
            sa.Enum("DEFAULT", "YES", "NO", name="edgetype"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["end_node_id"], ["nodeinterface.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["start_node_id"], ["nodeinterface.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_edge_id"), "edge", ["id"], unique=False)
    op.create_table(
        "endnode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["nodeinterface.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_endnode_id"), "endnode", ["id"], unique=False)
    op.create_table(
        "messagenode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SENT", "OPENED", name="status"),
            nullable=False,
        ),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("has_out_edge", sa.Boolean(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["nodeinterface.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_messagenode_id"), "messagenode", ["id"], unique=False
    )
    op.create_table(
        "startnode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("has_out_edge", sa.Boolean(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["nodeinterface.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"], ["workflow.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_startnode_id"), "startnode", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_startnode_id"), table_name="startnode")
    op.drop_table("startnode")
    op.drop_index(op.f("ix_messagenode_id"), table_name="messagenode")
    op.drop_table("messagenode")
    op.drop_index(op.f("ix_endnode_id"), table_name="endnode")
    op.drop_table("endnode")
    op.drop_index(op.f("ix_edge_id"), table_name="edge")
    op.drop_table("edge")
    op.drop_index(op.f("ix_conditionnode_id"), table_name="conditionnode")
    op.drop_table("conditionnode")
    op.drop_index(op.f("ix_workflow_id"), table_name="workflow")
    op.drop_table("workflow")
    op.drop_index(op.f("ix_nodeinterface_id"), table_name="nodeinterface")
    op.drop_table("nodeinterface")
    # ### end Alembic commands ###
